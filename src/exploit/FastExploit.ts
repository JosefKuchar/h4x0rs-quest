import Exploit from '../Exploit';
import { Colors } from '../Colors';
import GameScreen from '../screen/GameScreen';

export default class ClickExploit extends Exploit {
    progress: number;
    pos: number;
    dir: boolean;
    target: number;
    reference: any;

    constructor(ctx: CanvasRenderingContext2D, game: GameScreen) {
        super(ctx, 'FAST_BLEED.EXE', game);
        this.progress = 0;
        this.pos = 0;
        this.dir = false;
        this.target = Math.floor(Math.random() * 600) + 100;
        let reference;
        this.game.game.canvas.addEventListener('mousedown', reference = this.eventHandler.bind(this));
        this.reference = reference;
    }

    render() {
        super.renderWindow();

        this.ctx.strokeStyle = Colors.Foreground;
        this.ctx.beginPath();
        this.ctx.rect(50, 768 / 2 - 50 / 2, 1024 - 50 * 2, 100);
        this.ctx.closePath();
        this.ctx.stroke();
        this.ctx.fillStyle = Colors.Foreground;
        this.ctx.beginPath();
        this.ctx.arc(this.pos + 50 + 50, 768 / 2 + 25, 20, 0, 2 * Math.PI);
        this.ctx.closePath();
        this.ctx.fill();
        this.ctx.beginPath();
        this.ctx.arc(this.target + 50 + 50, 768 / 2 + 25, 40, 0, 2 * Math.PI);
        this.ctx.closePath();
        this.ctx.stroke();

        if (this.dir) {
            this.pos += 7;

            if (this.pos >= 800) {
                this.dir = !this.dir;
            }
        } else {
            this.pos -= 7;
            if (this.pos <= 0) {
                this.dir = !this.dir;
            }
        }
    }

    eventHandler() {
        if (
            this.pos - 20 >= this.target - 40 &&
            this.pos + 20 <= this.target + 40
        ) {
            this.game.game.canvas.removeEventListener('mousedown', this.reference);
            this.game.exploitDone();
        } else {
            this.target = Math.floor(Math.random() * 600) + 100;
            this.pos = 0;
            this.game.timeLeft -= 5;
        }
    }
}
